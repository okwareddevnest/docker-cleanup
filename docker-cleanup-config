#!/bin/bash

# docker-cleanup-config
# Interactive configuration tool for docker-cleanup

# Colors and emojis for UI
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Emojis
DOCKER_EMOJI="üê≥"
CLOCK_EMOJI="‚è∞"
TRASH_EMOJI="üóëÔ∏è"
SETTINGS_EMOJI="‚öôÔ∏è"
CHECK_EMOJI="‚úÖ"
WARNING_EMOJI="‚ö†Ô∏è"

# Function to display header
show_header() {
    clear
    echo -e "${BLUE}${DOCKER_EMOJI}  Docker Cleanup Configuration  ${DOCKER_EMOJI}${NC}"
    echo -e "${BLUE}==========================================${NC}\n"
}

# Function to display menu
show_menu() {
    echo -e "${YELLOW}${SETTINGS_EMOJI}  Main Menu:${NC}"
    echo "1) ${CLOCK_EMOJI} Configure Schedule"
    echo "2) ${TRASH_EMOJI} Configure Cleanup Options"
    echo "3) ${CHECK_EMOJI} View Current Settings"
    echo "4) ${WARNING_EMOJI} Run Cleanup Now"
    echo "5) Exit"
    echo
}

# Function to configure schedule
configure_schedule() {
    show_header
    echo -e "${YELLOW}${CLOCK_EMOJI}  Configure Cleanup Schedule${NC}"
    echo
    echo "Select frequency:"
    echo "1) Daily"
    echo "2) Weekly"
    echo "3) Monthly"
    echo "4) Custom (in days)"
    echo "5) Back to main menu"
    echo
    read -p "Enter your choice (1-5): " schedule_choice

    case $schedule_choice in
        1)
            sudo sed -i 's/OnUnitActiveSec=.*/OnUnitActiveSec=86400/' /etc/systemd/system/docker-cleanup.timer
            ;;
        2)
            sudo sed -i 's/OnUnitActiveSec=.*/OnUnitActiveSec=604800/' /etc/systemd/system/docker-cleanup.timer
            ;;
        3)
            sudo sed -i 's/OnUnitActiveSec=.*/OnUnitActiveSec=2592000/' /etc/systemd/system/docker-cleanup.timer
            ;;
        4)
            read -p "Enter number of days: " days
            seconds=$((days * 86400))
            sudo sed -i "s/OnUnitActiveSec=.*/OnUnitActiveSec=$seconds/" /etc/systemd/system/docker-cleanup.timer
            ;;
        5)
            return
            ;;
        *)
            echo -e "${RED}Invalid choice${NC}"
            sleep 2
            return
            ;;
    esac

    sudo systemctl daemon-reload
    sudo systemctl restart docker-cleanup.timer
    echo -e "${GREEN}${CHECK_EMOJI} Schedule updated successfully!${NC}"
    sleep 2
}

# Function to configure cleanup options
configure_cleanup() {
    show_header
    echo -e "${YELLOW}${TRASH_EMOJI}  Configure Cleanup Options${NC}"
    echo
    echo "Select containers to clean up:"
    echo "1) All containers"
    echo "2) Only stopped containers"
    echo "3) Only containers older than X days"
    echo "4) Back to main menu"
    echo
    read -p "Enter your choice (1-4): " cleanup_choice

    case $cleanup_choice in
        1)
            sudo sed -i 's/CLEANUP_MODE=.*/CLEANUP_MODE="all"/' /etc/docker-cleanup.conf
            ;;
        2)
            sudo sed -i 's/CLEANUP_MODE=.*/CLEANUP_MODE="stopped"/' /etc/docker-cleanup.conf
            ;;
        3)
            read -p "Enter number of days: " days
            sudo sed -i "s/CLEANUP_MODE=.*/CLEANUP_MODE=\"older:$days\"/" /etc/docker-cleanup.conf
            ;;
        4)
            return
            ;;
        *)
            echo -e "${RED}Invalid choice${NC}"
            sleep 2
            return
            ;;
    esac

    echo -e "${GREEN}${CHECK_EMOJI} Cleanup options updated successfully!${NC}"
    sleep 2
}

# Function to view current settings
view_settings() {
    show_header
    echo -e "${YELLOW}${SETTINGS_EMOJI}  Current Settings${NC}"
    echo
    echo "Schedule:"
    grep "OnUnitActiveSec" /etc/systemd/system/docker-cleanup.timer
    echo
    echo "Cleanup Mode:"
    grep "CLEANUP_MODE" /etc/docker-cleanup.conf
    echo
    echo "Timer Status:"
    systemctl status docker-cleanup.timer | grep Active
    echo
    read -p "Press Enter to continue..."
}

# Function to run cleanup now
run_cleanup() {
    show_header
    echo -e "${YELLOW}${WARNING_EMOJI}  Running Cleanup Now${NC}"
    echo
    echo "This will execute the cleanup with current settings."
    read -p "Are you sure? (y/n): " confirm
    if [ "$confirm" = "y" ]; then
        sudo systemctl start docker-cleanup.service
        echo -e "${GREEN}${CHECK_EMOJI} Cleanup started!${NC}"
        echo "View logs with: journalctl -u docker-cleanup.service -f"
        sleep 3
    fi
}

# Main loop
while true; do
    show_header
    show_menu
    read -p "Enter your choice (1-5): " choice

    case $choice in
        1)
            configure_schedule
            ;;
        2)
            configure_cleanup
            ;;
        3)
            view_settings
            ;;
        4)
            run_cleanup
            ;;
        5)
            echo -e "${GREEN}${CHECK_EMOJI} Goodbye!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}Invalid choice${NC}"
            sleep 2
            ;;
    esac
done 